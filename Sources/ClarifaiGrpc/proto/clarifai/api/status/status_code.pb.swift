// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: proto/clarifai/api/status/status_code.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Clarifai_Api_Status_StatusCode: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// to be revised and greatly expanded
  case zero // = 0

  /// Generic
  case success // = 10000
  case mixedStatus // = 10010
  case failure // = 10020
  case tryAgain // = 10030

  ///SUCCESS_WARNING_API_DEPRECATED = 10001;
  ///SUCCESS_WARNING_CLIENT_DEPRECATED = 10002;
  case notImplemented // = 10040

  /// Clarifai Connection Codes: 11xxx
  case connAccountIssues // = 11000

  /// invalid auth token used
  case connTokenInvalid // = 11001

  /// invalid auth credentials
  case connCredentialsInvalid // = 11002

  /// throttle hourly limit exceeded
  case connExceedHourlyLimit // = 11003

  /// throttle monthly limit exceeded
  case connExceedMonthlyLimit // = 11004

  /// throttler and billing stuff
  case connThrottled // = 11005

  /// throttler and billing stuff
  case connExceedsLimits // = 11006

  /// api key has insufficient permissions
  case connInsufficientScopes // = 11007

  /// api key is invalid
  case connKeyInvalid // = 11008

  /// api key not found
  case connKeyNotFound // = 11009

  /// multipart form parsing, broken json, etc
  case connBadRequestFormat // = 11100

  /// when path is bad
  case connDoesNotExist // = 11101

  /// something wrong with a header
  case connInvalidRequest // = 11102

  /// when a request method is not allowed
  case connMethodNotAllowed // = 11103

  /// lack GDPR consent
  case connNoGdprConsent // = 11104

  /// authentication method is disabled
  case connAuthMethodDisabled // = 11200

  /// Model/Custom Training related 20xxx
  case modelTrained // = 21100

  /// Custom model is currently training.
  case modelTraining // = 21101

  /// Custom model has not yet been trained.
  case modelUntrained // = 21102

  /// Custom model is currently in queue for training, waiting on assets to process first.
  case modelQueuedForTraining // = 21103
  case modelUploading // = 21104
  case modelUploadingFailed // = 21105

  /// Custom model training had no data.
  case modelTrainingNoData // = 21110

  /// Custom model training had no positive examples.
  case modelTrainingNoPositives // = 21111

  /// Custom model training was ONE_VS_N but with a single class.
  case modelTrainingOneVsNSingleClass // = 21112

  /// Training took longer than hard coded timeouts.
  case modelTrainingTimedOut // = 21113

  /// Training got error waiting on asset pipeline to finish.
  case modelTrainingWaitingError // = 21114

  /// Training threw an unknown exception.
  case modelTrainingUnknownError // = 21115

  /// Training message was redelivered.
  case modelTrainingMsgRedeliver // = 21116

  /// Training got error due to insufficient labelled data
  case modelTrainingInsufficientData // = 21117
  case modelTrainingInvalidParams // = 21118

  /// Training is stopped because too much data was dropped
  case modelTrainingInvalidDataToleranceExceeded // = 21119
  case modelModifySuccess // = 21150
  case modelModifyPending // = 21151
  case modelModifyFailed // = 21152
  case modelDoesNotExist // = 21200
  case modelPermissionDenied // = 21201
  case modelInvalidArgument // = 21202
  case modelInvalidRequest // = 21203
  case modelEvaluated // = 21300
  case modelEvaluating // = 21301
  case modelNotEvaluated // = 21302
  case modelQueuedForEvaluation // = 21303

  /// Evaluation took longer than hard coded timeouts.
  case modelEvaluationTimedOut // = 21310

  /// Evaluation got error waiting on asset pipeline to finish.
  case modelEvaluationWaitingError // = 21311

  /// EVALUATION THREW AN UNKNOWN EXCEPTION.
  case modelEvaluationUnknownError // = 21312
  case modelPredictionFailed // = 21313

  /// Eval message was redelivered.
  case modelEvaluationMsgRedeliver // = 21314

  /// Don't have enough concepts labelled to perform evaluation
  case modelEvaluationNeedLabels // = 21315

  /// Don't have enough inputs per concept to perform evaluation
  case modelEvaluationNeedInputs // = 21316

  /// Used when inference coordinator failed to deploy spire and throws an error
  case modelDeploymentFailed // = 21350

  /// Used when calling the inference coordinator to deploy a spire
  case modelDeploying // = 21351

  /// Used when training is completed
  case modelQueuedForDeployment // = 21352

  /// Used when model spire deployment is manually taken down or due to inactivity
  case modelNotDeployed // = 21353

  /// specified model input not in workflow
  case workflowNoMatchingInput // = 22001

  /// specified model must be trained
  case workflowRequireTrainedModel // = 22002
  case workflowDuplicate // = 22100
  case workflowUnsupportedFormat // = 22101
  case workflowDoesNotExist // = 22102
  case workflowPermissionDenied // = 22103

  /// error in the request somewhere
  case workflowInvalidArgument // = 22104
  case workflowInvalidRecipe // = 22105
  case workflowInvalidTemplate // = 22106
  case workflowInvalidGraph // = 22107
  case workflowInternalFailure // = 22108

  /// error in the request somewhere
  case workflowInvalidRequest // = 22999
  case workflowModifySuccess // = 22150
  case workflowModifyPending // = 22151
  case workflowModifyFailed // = 22152
  case workflowReindexFailed // = 22153

  /// Concept related 23xxx
  case conceptModifySuccess // = 23150
  case conceptModifyPending // = 23151
  case conceptModifyFailed // = 23152

  /// Annotation related 24xxx
  case annotationSuccess // = 24150
  case annotationPending // = 24151
  case annotationFailed // = 24152
  case annotationUnknownStatus // = 24154
  case annotationInvalidArgument // = 24155
  case annotationPermissionDenied // = 24156
  case annotationAwaitingReview // = 24157
  case annotationReviewDenied // = 24158
  case annotationModifySuccess // = 24250
  case annotationModifyPending // = 24251
  case annotationModifyFailed // = 24252

  /// Metadata related 249xx
  case metadataInvalidPatchArguments // = 24900
  case metadataParsingIssue // = 24901
  case metadataManipulationIssue // = 24902

  /// Training service related 25xxx
  case trainerJobStateNone // = 25000
  case trainerJobStateQueued // = 25001
  case trainerJobStateRunning // = 25002
  case trainerJobStateComplete // = 25003
  case trainerJobStateError // = 25004

  /// Data Dump related 251xx
  case dataDumpSuccess // = 25150
  case dataDumpPending // = 25151
  case dataDumpFailed // = 25152
  case dataDumpInProgress // = 25153

  /// Duplicate related 252xx
  case appDuplicationSuccess // = 25200
  case appDuplicationFailed // = 25201
  case appDuplicationPending // = 25202
  case appDuplicationInProgress // = 25203
  case appDuplicationInvalidRequest // = 25204

  /// Input:Image related 30xxx
  case inputDownloadSuccess // = 30000

  /// when things are async, this is the default status.
  case inputDownloadPending // = 30001

  /// any type of error downloading and processing
  case inputDownloadFailed // = 30002
  case inputDownloadInProgress // = 30003
  case inputStatusUpdateFailed // = 30004
  case inputDeleteFailed // = 30005
  case inputDuplicate // = 30100
  case inputUnsupportedFormat // = 30101
  case inputDoesNotExist // = 30102
  case inputPermissionDenied // = 30103
  case inputInvalidArgument // = 30104
  case inputOverLimit // = 30105
  case inputInvalidURL // = 30106
  case inputModifySuccess // = 30200
  case inputModifyPending // = 30201
  case inputModifyFailed // = 30203
  case inputStorageHostFailed // = 30210
  case allInputInvalidBytes // = 30300
  case inputClusterSuccess // = 30400
  case inputClusterPending // = 30401
  case inputClusterFailed // = 30402
  case inputClusterInProgress // = 30403
  case inputReindexSuccess // = 30500
  case inputReindexPending // = 30501
  case inputReindexFailed // = 30502
  case inputReindexInProgress // = 30503

  /// Input:Video related 31xxx -- Deprecated
  case inputVideoDownloadSuccess // = 31000
  case inputVideoDownloadPending // = 31001
  case inputVideoDownloadFailed // = 31002
  case inputVideoDuplicate // = 31100
  case inputVideoUnsupportedFormat // = 31101
  case inputVideoDoesNotExist // = 31102
  case inputVideoPermissionDenied // = 31103
  case inputVideoInvalidArgument // = 31104
  case inputVideoOverLimit // = 31105
  case inputVideoInvalidURL // = 31106
  case inputVideoModifySuccess // = 31200
  case inputVideoModifyPending // = 31201
  case inputVideoModifyFailed // = 31203
  case inputVideoStorageHostFailed // = 31210
  case allInputVideosInvalidBytes // = 31300
  case inputConnectionFailed // = 39996
  case requestDisabledForMaintenance // = 39997
  case inputWritesDisabledForMaintenance // = 39998
  case inputInvalidRequest // = 39999

  /// API formatting issues 4000x
  case predictInvalidRequest // = 40001
  case searchInvalidRequest // = 40002
  case conceptsInvalidRequest // = 40003
  case statsInvalidRequest // = 40004

  /// Other related 400xx
  case databaseDuplicateKey // = 40010
  case databaseStatementTimeout // = 40011
  case databaseInvalidRowsAffected // = 40012
  case databaseDeadlockDetected // = 40013
  case databaseFailTask // = 40014
  case databaseFailToGetConnections // = 40015
  case databaseTooManyClients // = 40016
  case databaseConstraintViolated // = 40017
  case databaseNoOngoingOperations // = 40018
  case databaseLockedByOngoingOperation // = 40019
  case asyncWorkerMultiErrors // = 40020
  case rpcRequestQueueFull // = 40030
  case rpcServerUnavailable // = 40031
  case rpcRequestTimeout // = 40032
  case rpcMaxMessageSizeExceeded // = 40033
  case rpcCanceled // = 40035
  case clusterInternalFailure // = 43040

  /// could not connect to external services
  case externalConnectionError // = 40034

  /// Queue related errors 41xxx
  case queueConnError // = 41000
  case queueCloseRequestTimeout // = 41002
  case queueConnClosed // = 41003
  case queuePublishAckTimeout // = 41004
  case queuePublishError // = 41005
  case queueSubscriptionTimeout // = 41006
  case queueSubscriptionError // = 41007
  case queueMarshallingFailed // = 41008
  case queueUnmarshallingFailed // = 41009
  case queueMaxMsgRedeliveryExceeded // = 41010
  case queueAckFailure // = 41011

  /// SQS related errors 411xx
  case sqsOverlimit // = 41100
  case sqsInvalidReceiptHandle // = 41101
  case sqsUnknown // = 41102

  /// KAFKA related errros 412xx
  case kafkaUnknow // = 41200
  case kafkaMissingTopic // = 41201
  case kafkaAdminErr // = 41202
  case kafkaConsumerErr // = 41203
  case kafkaPublisherErr // = 41204

  ///Search related errors 43xxxx
  case searchInternalFailure // = 43001
  case searchProjectionFailure // = 43002
  case searchPredictionFailure // = 43003
  case searchByNotFullyIndexedInput // = 43004
  case savedSearchModifyFailed // = 43005
  case annotationSearchMetricsQueuedForEvaluation // = 43100
  case annotationSearchMetricsEvaluating // = 43101
  case annotationSearchMetricsEvaluated // = 43102
  case annotationSearchMetricsFailedToRetrieveData // = 43103
  case annotationSearchMetricsInvalidArgument // = 43104
  case annotationSearchMetricsFailed // = 43105

  /// Stripe 44xxx
  case stripeEventError // = 44001

  /// Redis/Cache 45xxx
  case cacheMiss // = 45001
  case redisScriptExitedWithFailure // = 45002

  /// Sift Science 46xxx
  case signupEventError // = 46001
  case signupFlagged // = 46002
  case filetypeUnsupported // = 46003

  /// Application counts related errors 470xx
  case appCountInvalidMessage // = 47001
  case appCountUpdateIncrementFailed // = 47002
  case appCountRebuildFailed // = 47003
  case appCountInternalFailure // = 47004

  /// Media processor related errors 471xx -- DEPRECATED
  case mpDownloadError // = 47101
  case mpResolveDnsError // = 47102
  case mpDownloadMaxSizeExceededError // = 47103
  case mpImageDecodeError // = 47104
  case mpInvalidArgument // = 47105
  case mpImageProcessingError // = 47106

  /// User legal consent stauts related 50xxx
  case userConsentFace // = 50001

  /// Workers 51xxx
  case workerMissing // = 51000
  case workerActive // = 51001
  case workerInactive // = 51002

  /// Collectors 52xxx
  case collectorMissing // = 52000
  case collectorActive // = 52001
  case collectorInactive // = 52002

  /// SSO 53xxx
  case ssoIdentityProviderDoesNotExist // = 53001

  /// Tasks 54xxx
  /// The task was created.
  case taskInProgress // = 54001

  /// The task is completed.
  case taskDone // = 54002

  /// The task is marked as abandoned.
  case taskWontDo // = 54003

  /// An error occurred during add-task-annotations pipeline.
  case taskAddAnnotationsFailure // = 54005

  /// The task operation is in conflict with the current state of the server.
  case taskConflict // = 54100

  /// Certain task-related scenarios are not implemented.
  case taskNotImplemented // = 54101

  /// Label Order Related Status Code 55xxx
  case labelOrderPending // = 55001
  case labelOrderInProgress // = 55002
  case labelOrderSuccess // = 55003
  case labelOrderCanceled // = 55004

  /// License Related Status Code 600xx
  case licenseActive // = 60000
  case licenseDoesNotExist // = 60001
  case licenseNeedUpdate // = 60002
  case licenseExpired // = 60003
  case licenseRevoked // = 60004

  /// hidden state not reflected to users
  case licenseDeleted // = 60005
  case licenseVolumeExceeded // = 60006

  /// Password Related Status Code
  case passwordValidationSuccess // = 61000
  case passwordValidationFailed // = 61001
  case passwordpolicyInvalidArgument // = 61002

  /// Feature flags status code
  case featureflagConfigNotFound // = 62000
  case featureflagInvalidArgument // = 62001
  case featureflagBlocked // = 62002

  /// Internal issues: 98xxx
  case internalServerIssue // = 98004
  case internalFetchingIssue // = 98005
  case internalDatabaseIssue // = 98006
  case internalUnexpectedTimeout // = 98009
  case internalUnexpectedV1 // = 98010
  case internalUnexpectedPanic // = 98011
  case internalUnexpectedSpire // = 98012
  case internalRedisUnavailable // = 98013
  case internalResourceExhausted // = 98014
  case internalRedisUncategorized // = 98015
  case internalAwsUncategorized // = 98016
  case internalAzureUncategorized // = 98017

  /// Uncategorized: 99xxx: move off as soon as known
  case connUncategorized // = 99001
  case modelUncategorized // = 99002
  case inputUncategorized // = 99003
  case annotationUncategorized // = 99004
  case billingUncategorized // = 99005
  case internalUncategorized // = 99009

  /// Depreciated codes: migrate off these to one of the internal issues
  case badRequest // = 90400
  case serverError // = 90500
  case UNRECOGNIZED(Int)

  public init() {
    self = .zero
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .zero
    case 10000: self = .success
    case 10010: self = .mixedStatus
    case 10020: self = .failure
    case 10030: self = .tryAgain
    case 10040: self = .notImplemented
    case 11000: self = .connAccountIssues
    case 11001: self = .connTokenInvalid
    case 11002: self = .connCredentialsInvalid
    case 11003: self = .connExceedHourlyLimit
    case 11004: self = .connExceedMonthlyLimit
    case 11005: self = .connThrottled
    case 11006: self = .connExceedsLimits
    case 11007: self = .connInsufficientScopes
    case 11008: self = .connKeyInvalid
    case 11009: self = .connKeyNotFound
    case 11100: self = .connBadRequestFormat
    case 11101: self = .connDoesNotExist
    case 11102: self = .connInvalidRequest
    case 11103: self = .connMethodNotAllowed
    case 11104: self = .connNoGdprConsent
    case 11200: self = .connAuthMethodDisabled
    case 21100: self = .modelTrained
    case 21101: self = .modelTraining
    case 21102: self = .modelUntrained
    case 21103: self = .modelQueuedForTraining
    case 21104: self = .modelUploading
    case 21105: self = .modelUploadingFailed
    case 21110: self = .modelTrainingNoData
    case 21111: self = .modelTrainingNoPositives
    case 21112: self = .modelTrainingOneVsNSingleClass
    case 21113: self = .modelTrainingTimedOut
    case 21114: self = .modelTrainingWaitingError
    case 21115: self = .modelTrainingUnknownError
    case 21116: self = .modelTrainingMsgRedeliver
    case 21117: self = .modelTrainingInsufficientData
    case 21118: self = .modelTrainingInvalidParams
    case 21119: self = .modelTrainingInvalidDataToleranceExceeded
    case 21150: self = .modelModifySuccess
    case 21151: self = .modelModifyPending
    case 21152: self = .modelModifyFailed
    case 21200: self = .modelDoesNotExist
    case 21201: self = .modelPermissionDenied
    case 21202: self = .modelInvalidArgument
    case 21203: self = .modelInvalidRequest
    case 21300: self = .modelEvaluated
    case 21301: self = .modelEvaluating
    case 21302: self = .modelNotEvaluated
    case 21303: self = .modelQueuedForEvaluation
    case 21310: self = .modelEvaluationTimedOut
    case 21311: self = .modelEvaluationWaitingError
    case 21312: self = .modelEvaluationUnknownError
    case 21313: self = .modelPredictionFailed
    case 21314: self = .modelEvaluationMsgRedeliver
    case 21315: self = .modelEvaluationNeedLabels
    case 21316: self = .modelEvaluationNeedInputs
    case 21350: self = .modelDeploymentFailed
    case 21351: self = .modelDeploying
    case 21352: self = .modelQueuedForDeployment
    case 21353: self = .modelNotDeployed
    case 22001: self = .workflowNoMatchingInput
    case 22002: self = .workflowRequireTrainedModel
    case 22100: self = .workflowDuplicate
    case 22101: self = .workflowUnsupportedFormat
    case 22102: self = .workflowDoesNotExist
    case 22103: self = .workflowPermissionDenied
    case 22104: self = .workflowInvalidArgument
    case 22105: self = .workflowInvalidRecipe
    case 22106: self = .workflowInvalidTemplate
    case 22107: self = .workflowInvalidGraph
    case 22108: self = .workflowInternalFailure
    case 22150: self = .workflowModifySuccess
    case 22151: self = .workflowModifyPending
    case 22152: self = .workflowModifyFailed
    case 22153: self = .workflowReindexFailed
    case 22999: self = .workflowInvalidRequest
    case 23150: self = .conceptModifySuccess
    case 23151: self = .conceptModifyPending
    case 23152: self = .conceptModifyFailed
    case 24150: self = .annotationSuccess
    case 24151: self = .annotationPending
    case 24152: self = .annotationFailed
    case 24154: self = .annotationUnknownStatus
    case 24155: self = .annotationInvalidArgument
    case 24156: self = .annotationPermissionDenied
    case 24157: self = .annotationAwaitingReview
    case 24158: self = .annotationReviewDenied
    case 24250: self = .annotationModifySuccess
    case 24251: self = .annotationModifyPending
    case 24252: self = .annotationModifyFailed
    case 24900: self = .metadataInvalidPatchArguments
    case 24901: self = .metadataParsingIssue
    case 24902: self = .metadataManipulationIssue
    case 25000: self = .trainerJobStateNone
    case 25001: self = .trainerJobStateQueued
    case 25002: self = .trainerJobStateRunning
    case 25003: self = .trainerJobStateComplete
    case 25004: self = .trainerJobStateError
    case 25150: self = .dataDumpSuccess
    case 25151: self = .dataDumpPending
    case 25152: self = .dataDumpFailed
    case 25153: self = .dataDumpInProgress
    case 25200: self = .appDuplicationSuccess
    case 25201: self = .appDuplicationFailed
    case 25202: self = .appDuplicationPending
    case 25203: self = .appDuplicationInProgress
    case 25204: self = .appDuplicationInvalidRequest
    case 30000: self = .inputDownloadSuccess
    case 30001: self = .inputDownloadPending
    case 30002: self = .inputDownloadFailed
    case 30003: self = .inputDownloadInProgress
    case 30004: self = .inputStatusUpdateFailed
    case 30005: self = .inputDeleteFailed
    case 30100: self = .inputDuplicate
    case 30101: self = .inputUnsupportedFormat
    case 30102: self = .inputDoesNotExist
    case 30103: self = .inputPermissionDenied
    case 30104: self = .inputInvalidArgument
    case 30105: self = .inputOverLimit
    case 30106: self = .inputInvalidURL
    case 30200: self = .inputModifySuccess
    case 30201: self = .inputModifyPending
    case 30203: self = .inputModifyFailed
    case 30210: self = .inputStorageHostFailed
    case 30300: self = .allInputInvalidBytes
    case 30400: self = .inputClusterSuccess
    case 30401: self = .inputClusterPending
    case 30402: self = .inputClusterFailed
    case 30403: self = .inputClusterInProgress
    case 30500: self = .inputReindexSuccess
    case 30501: self = .inputReindexPending
    case 30502: self = .inputReindexFailed
    case 30503: self = .inputReindexInProgress
    case 31000: self = .inputVideoDownloadSuccess
    case 31001: self = .inputVideoDownloadPending
    case 31002: self = .inputVideoDownloadFailed
    case 31100: self = .inputVideoDuplicate
    case 31101: self = .inputVideoUnsupportedFormat
    case 31102: self = .inputVideoDoesNotExist
    case 31103: self = .inputVideoPermissionDenied
    case 31104: self = .inputVideoInvalidArgument
    case 31105: self = .inputVideoOverLimit
    case 31106: self = .inputVideoInvalidURL
    case 31200: self = .inputVideoModifySuccess
    case 31201: self = .inputVideoModifyPending
    case 31203: self = .inputVideoModifyFailed
    case 31210: self = .inputVideoStorageHostFailed
    case 31300: self = .allInputVideosInvalidBytes
    case 39996: self = .inputConnectionFailed
    case 39997: self = .requestDisabledForMaintenance
    case 39998: self = .inputWritesDisabledForMaintenance
    case 39999: self = .inputInvalidRequest
    case 40001: self = .predictInvalidRequest
    case 40002: self = .searchInvalidRequest
    case 40003: self = .conceptsInvalidRequest
    case 40004: self = .statsInvalidRequest
    case 40010: self = .databaseDuplicateKey
    case 40011: self = .databaseStatementTimeout
    case 40012: self = .databaseInvalidRowsAffected
    case 40013: self = .databaseDeadlockDetected
    case 40014: self = .databaseFailTask
    case 40015: self = .databaseFailToGetConnections
    case 40016: self = .databaseTooManyClients
    case 40017: self = .databaseConstraintViolated
    case 40018: self = .databaseNoOngoingOperations
    case 40019: self = .databaseLockedByOngoingOperation
    case 40020: self = .asyncWorkerMultiErrors
    case 40030: self = .rpcRequestQueueFull
    case 40031: self = .rpcServerUnavailable
    case 40032: self = .rpcRequestTimeout
    case 40033: self = .rpcMaxMessageSizeExceeded
    case 40034: self = .externalConnectionError
    case 40035: self = .rpcCanceled
    case 41000: self = .queueConnError
    case 41002: self = .queueCloseRequestTimeout
    case 41003: self = .queueConnClosed
    case 41004: self = .queuePublishAckTimeout
    case 41005: self = .queuePublishError
    case 41006: self = .queueSubscriptionTimeout
    case 41007: self = .queueSubscriptionError
    case 41008: self = .queueMarshallingFailed
    case 41009: self = .queueUnmarshallingFailed
    case 41010: self = .queueMaxMsgRedeliveryExceeded
    case 41011: self = .queueAckFailure
    case 41100: self = .sqsOverlimit
    case 41101: self = .sqsInvalidReceiptHandle
    case 41102: self = .sqsUnknown
    case 41200: self = .kafkaUnknow
    case 41201: self = .kafkaMissingTopic
    case 41202: self = .kafkaAdminErr
    case 41203: self = .kafkaConsumerErr
    case 41204: self = .kafkaPublisherErr
    case 43001: self = .searchInternalFailure
    case 43002: self = .searchProjectionFailure
    case 43003: self = .searchPredictionFailure
    case 43004: self = .searchByNotFullyIndexedInput
    case 43005: self = .savedSearchModifyFailed
    case 43040: self = .clusterInternalFailure
    case 43100: self = .annotationSearchMetricsQueuedForEvaluation
    case 43101: self = .annotationSearchMetricsEvaluating
    case 43102: self = .annotationSearchMetricsEvaluated
    case 43103: self = .annotationSearchMetricsFailedToRetrieveData
    case 43104: self = .annotationSearchMetricsInvalidArgument
    case 43105: self = .annotationSearchMetricsFailed
    case 44001: self = .stripeEventError
    case 45001: self = .cacheMiss
    case 45002: self = .redisScriptExitedWithFailure
    case 46001: self = .signupEventError
    case 46002: self = .signupFlagged
    case 46003: self = .filetypeUnsupported
    case 47001: self = .appCountInvalidMessage
    case 47002: self = .appCountUpdateIncrementFailed
    case 47003: self = .appCountRebuildFailed
    case 47004: self = .appCountInternalFailure
    case 47101: self = .mpDownloadError
    case 47102: self = .mpResolveDnsError
    case 47103: self = .mpDownloadMaxSizeExceededError
    case 47104: self = .mpImageDecodeError
    case 47105: self = .mpInvalidArgument
    case 47106: self = .mpImageProcessingError
    case 50001: self = .userConsentFace
    case 51000: self = .workerMissing
    case 51001: self = .workerActive
    case 51002: self = .workerInactive
    case 52000: self = .collectorMissing
    case 52001: self = .collectorActive
    case 52002: self = .collectorInactive
    case 53001: self = .ssoIdentityProviderDoesNotExist
    case 54001: self = .taskInProgress
    case 54002: self = .taskDone
    case 54003: self = .taskWontDo
    case 54005: self = .taskAddAnnotationsFailure
    case 54100: self = .taskConflict
    case 54101: self = .taskNotImplemented
    case 55001: self = .labelOrderPending
    case 55002: self = .labelOrderInProgress
    case 55003: self = .labelOrderSuccess
    case 55004: self = .labelOrderCanceled
    case 60000: self = .licenseActive
    case 60001: self = .licenseDoesNotExist
    case 60002: self = .licenseNeedUpdate
    case 60003: self = .licenseExpired
    case 60004: self = .licenseRevoked
    case 60005: self = .licenseDeleted
    case 60006: self = .licenseVolumeExceeded
    case 61000: self = .passwordValidationSuccess
    case 61001: self = .passwordValidationFailed
    case 61002: self = .passwordpolicyInvalidArgument
    case 62000: self = .featureflagConfigNotFound
    case 62001: self = .featureflagInvalidArgument
    case 62002: self = .featureflagBlocked
    case 90400: self = .badRequest
    case 90500: self = .serverError
    case 98004: self = .internalServerIssue
    case 98005: self = .internalFetchingIssue
    case 98006: self = .internalDatabaseIssue
    case 98009: self = .internalUnexpectedTimeout
    case 98010: self = .internalUnexpectedV1
    case 98011: self = .internalUnexpectedPanic
    case 98012: self = .internalUnexpectedSpire
    case 98013: self = .internalRedisUnavailable
    case 98014: self = .internalResourceExhausted
    case 98015: self = .internalRedisUncategorized
    case 98016: self = .internalAwsUncategorized
    case 98017: self = .internalAzureUncategorized
    case 99001: self = .connUncategorized
    case 99002: self = .modelUncategorized
    case 99003: self = .inputUncategorized
    case 99004: self = .annotationUncategorized
    case 99005: self = .billingUncategorized
    case 99009: self = .internalUncategorized
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .zero: return 0
    case .success: return 10000
    case .mixedStatus: return 10010
    case .failure: return 10020
    case .tryAgain: return 10030
    case .notImplemented: return 10040
    case .connAccountIssues: return 11000
    case .connTokenInvalid: return 11001
    case .connCredentialsInvalid: return 11002
    case .connExceedHourlyLimit: return 11003
    case .connExceedMonthlyLimit: return 11004
    case .connThrottled: return 11005
    case .connExceedsLimits: return 11006
    case .connInsufficientScopes: return 11007
    case .connKeyInvalid: return 11008
    case .connKeyNotFound: return 11009
    case .connBadRequestFormat: return 11100
    case .connDoesNotExist: return 11101
    case .connInvalidRequest: return 11102
    case .connMethodNotAllowed: return 11103
    case .connNoGdprConsent: return 11104
    case .connAuthMethodDisabled: return 11200
    case .modelTrained: return 21100
    case .modelTraining: return 21101
    case .modelUntrained: return 21102
    case .modelQueuedForTraining: return 21103
    case .modelUploading: return 21104
    case .modelUploadingFailed: return 21105
    case .modelTrainingNoData: return 21110
    case .modelTrainingNoPositives: return 21111
    case .modelTrainingOneVsNSingleClass: return 21112
    case .modelTrainingTimedOut: return 21113
    case .modelTrainingWaitingError: return 21114
    case .modelTrainingUnknownError: return 21115
    case .modelTrainingMsgRedeliver: return 21116
    case .modelTrainingInsufficientData: return 21117
    case .modelTrainingInvalidParams: return 21118
    case .modelTrainingInvalidDataToleranceExceeded: return 21119
    case .modelModifySuccess: return 21150
    case .modelModifyPending: return 21151
    case .modelModifyFailed: return 21152
    case .modelDoesNotExist: return 21200
    case .modelPermissionDenied: return 21201
    case .modelInvalidArgument: return 21202
    case .modelInvalidRequest: return 21203
    case .modelEvaluated: return 21300
    case .modelEvaluating: return 21301
    case .modelNotEvaluated: return 21302
    case .modelQueuedForEvaluation: return 21303
    case .modelEvaluationTimedOut: return 21310
    case .modelEvaluationWaitingError: return 21311
    case .modelEvaluationUnknownError: return 21312
    case .modelPredictionFailed: return 21313
    case .modelEvaluationMsgRedeliver: return 21314
    case .modelEvaluationNeedLabels: return 21315
    case .modelEvaluationNeedInputs: return 21316
    case .modelDeploymentFailed: return 21350
    case .modelDeploying: return 21351
    case .modelQueuedForDeployment: return 21352
    case .modelNotDeployed: return 21353
    case .workflowNoMatchingInput: return 22001
    case .workflowRequireTrainedModel: return 22002
    case .workflowDuplicate: return 22100
    case .workflowUnsupportedFormat: return 22101
    case .workflowDoesNotExist: return 22102
    case .workflowPermissionDenied: return 22103
    case .workflowInvalidArgument: return 22104
    case .workflowInvalidRecipe: return 22105
    case .workflowInvalidTemplate: return 22106
    case .workflowInvalidGraph: return 22107
    case .workflowInternalFailure: return 22108
    case .workflowModifySuccess: return 22150
    case .workflowModifyPending: return 22151
    case .workflowModifyFailed: return 22152
    case .workflowReindexFailed: return 22153
    case .workflowInvalidRequest: return 22999
    case .conceptModifySuccess: return 23150
    case .conceptModifyPending: return 23151
    case .conceptModifyFailed: return 23152
    case .annotationSuccess: return 24150
    case .annotationPending: return 24151
    case .annotationFailed: return 24152
    case .annotationUnknownStatus: return 24154
    case .annotationInvalidArgument: return 24155
    case .annotationPermissionDenied: return 24156
    case .annotationAwaitingReview: return 24157
    case .annotationReviewDenied: return 24158
    case .annotationModifySuccess: return 24250
    case .annotationModifyPending: return 24251
    case .annotationModifyFailed: return 24252
    case .metadataInvalidPatchArguments: return 24900
    case .metadataParsingIssue: return 24901
    case .metadataManipulationIssue: return 24902
    case .trainerJobStateNone: return 25000
    case .trainerJobStateQueued: return 25001
    case .trainerJobStateRunning: return 25002
    case .trainerJobStateComplete: return 25003
    case .trainerJobStateError: return 25004
    case .dataDumpSuccess: return 25150
    case .dataDumpPending: return 25151
    case .dataDumpFailed: return 25152
    case .dataDumpInProgress: return 25153
    case .appDuplicationSuccess: return 25200
    case .appDuplicationFailed: return 25201
    case .appDuplicationPending: return 25202
    case .appDuplicationInProgress: return 25203
    case .appDuplicationInvalidRequest: return 25204
    case .inputDownloadSuccess: return 30000
    case .inputDownloadPending: return 30001
    case .inputDownloadFailed: return 30002
    case .inputDownloadInProgress: return 30003
    case .inputStatusUpdateFailed: return 30004
    case .inputDeleteFailed: return 30005
    case .inputDuplicate: return 30100
    case .inputUnsupportedFormat: return 30101
    case .inputDoesNotExist: return 30102
    case .inputPermissionDenied: return 30103
    case .inputInvalidArgument: return 30104
    case .inputOverLimit: return 30105
    case .inputInvalidURL: return 30106
    case .inputModifySuccess: return 30200
    case .inputModifyPending: return 30201
    case .inputModifyFailed: return 30203
    case .inputStorageHostFailed: return 30210
    case .allInputInvalidBytes: return 30300
    case .inputClusterSuccess: return 30400
    case .inputClusterPending: return 30401
    case .inputClusterFailed: return 30402
    case .inputClusterInProgress: return 30403
    case .inputReindexSuccess: return 30500
    case .inputReindexPending: return 30501
    case .inputReindexFailed: return 30502
    case .inputReindexInProgress: return 30503
    case .inputVideoDownloadSuccess: return 31000
    case .inputVideoDownloadPending: return 31001
    case .inputVideoDownloadFailed: return 31002
    case .inputVideoDuplicate: return 31100
    case .inputVideoUnsupportedFormat: return 31101
    case .inputVideoDoesNotExist: return 31102
    case .inputVideoPermissionDenied: return 31103
    case .inputVideoInvalidArgument: return 31104
    case .inputVideoOverLimit: return 31105
    case .inputVideoInvalidURL: return 31106
    case .inputVideoModifySuccess: return 31200
    case .inputVideoModifyPending: return 31201
    case .inputVideoModifyFailed: return 31203
    case .inputVideoStorageHostFailed: return 31210
    case .allInputVideosInvalidBytes: return 31300
    case .inputConnectionFailed: return 39996
    case .requestDisabledForMaintenance: return 39997
    case .inputWritesDisabledForMaintenance: return 39998
    case .inputInvalidRequest: return 39999
    case .predictInvalidRequest: return 40001
    case .searchInvalidRequest: return 40002
    case .conceptsInvalidRequest: return 40003
    case .statsInvalidRequest: return 40004
    case .databaseDuplicateKey: return 40010
    case .databaseStatementTimeout: return 40011
    case .databaseInvalidRowsAffected: return 40012
    case .databaseDeadlockDetected: return 40013
    case .databaseFailTask: return 40014
    case .databaseFailToGetConnections: return 40015
    case .databaseTooManyClients: return 40016
    case .databaseConstraintViolated: return 40017
    case .databaseNoOngoingOperations: return 40018
    case .databaseLockedByOngoingOperation: return 40019
    case .asyncWorkerMultiErrors: return 40020
    case .rpcRequestQueueFull: return 40030
    case .rpcServerUnavailable: return 40031
    case .rpcRequestTimeout: return 40032
    case .rpcMaxMessageSizeExceeded: return 40033
    case .externalConnectionError: return 40034
    case .rpcCanceled: return 40035
    case .queueConnError: return 41000
    case .queueCloseRequestTimeout: return 41002
    case .queueConnClosed: return 41003
    case .queuePublishAckTimeout: return 41004
    case .queuePublishError: return 41005
    case .queueSubscriptionTimeout: return 41006
    case .queueSubscriptionError: return 41007
    case .queueMarshallingFailed: return 41008
    case .queueUnmarshallingFailed: return 41009
    case .queueMaxMsgRedeliveryExceeded: return 41010
    case .queueAckFailure: return 41011
    case .sqsOverlimit: return 41100
    case .sqsInvalidReceiptHandle: return 41101
    case .sqsUnknown: return 41102
    case .kafkaUnknow: return 41200
    case .kafkaMissingTopic: return 41201
    case .kafkaAdminErr: return 41202
    case .kafkaConsumerErr: return 41203
    case .kafkaPublisherErr: return 41204
    case .searchInternalFailure: return 43001
    case .searchProjectionFailure: return 43002
    case .searchPredictionFailure: return 43003
    case .searchByNotFullyIndexedInput: return 43004
    case .savedSearchModifyFailed: return 43005
    case .clusterInternalFailure: return 43040
    case .annotationSearchMetricsQueuedForEvaluation: return 43100
    case .annotationSearchMetricsEvaluating: return 43101
    case .annotationSearchMetricsEvaluated: return 43102
    case .annotationSearchMetricsFailedToRetrieveData: return 43103
    case .annotationSearchMetricsInvalidArgument: return 43104
    case .annotationSearchMetricsFailed: return 43105
    case .stripeEventError: return 44001
    case .cacheMiss: return 45001
    case .redisScriptExitedWithFailure: return 45002
    case .signupEventError: return 46001
    case .signupFlagged: return 46002
    case .filetypeUnsupported: return 46003
    case .appCountInvalidMessage: return 47001
    case .appCountUpdateIncrementFailed: return 47002
    case .appCountRebuildFailed: return 47003
    case .appCountInternalFailure: return 47004
    case .mpDownloadError: return 47101
    case .mpResolveDnsError: return 47102
    case .mpDownloadMaxSizeExceededError: return 47103
    case .mpImageDecodeError: return 47104
    case .mpInvalidArgument: return 47105
    case .mpImageProcessingError: return 47106
    case .userConsentFace: return 50001
    case .workerMissing: return 51000
    case .workerActive: return 51001
    case .workerInactive: return 51002
    case .collectorMissing: return 52000
    case .collectorActive: return 52001
    case .collectorInactive: return 52002
    case .ssoIdentityProviderDoesNotExist: return 53001
    case .taskInProgress: return 54001
    case .taskDone: return 54002
    case .taskWontDo: return 54003
    case .taskAddAnnotationsFailure: return 54005
    case .taskConflict: return 54100
    case .taskNotImplemented: return 54101
    case .labelOrderPending: return 55001
    case .labelOrderInProgress: return 55002
    case .labelOrderSuccess: return 55003
    case .labelOrderCanceled: return 55004
    case .licenseActive: return 60000
    case .licenseDoesNotExist: return 60001
    case .licenseNeedUpdate: return 60002
    case .licenseExpired: return 60003
    case .licenseRevoked: return 60004
    case .licenseDeleted: return 60005
    case .licenseVolumeExceeded: return 60006
    case .passwordValidationSuccess: return 61000
    case .passwordValidationFailed: return 61001
    case .passwordpolicyInvalidArgument: return 61002
    case .featureflagConfigNotFound: return 62000
    case .featureflagInvalidArgument: return 62001
    case .featureflagBlocked: return 62002
    case .badRequest: return 90400
    case .serverError: return 90500
    case .internalServerIssue: return 98004
    case .internalFetchingIssue: return 98005
    case .internalDatabaseIssue: return 98006
    case .internalUnexpectedTimeout: return 98009
    case .internalUnexpectedV1: return 98010
    case .internalUnexpectedPanic: return 98011
    case .internalUnexpectedSpire: return 98012
    case .internalRedisUnavailable: return 98013
    case .internalResourceExhausted: return 98014
    case .internalRedisUncategorized: return 98015
    case .internalAwsUncategorized: return 98016
    case .internalAzureUncategorized: return 98017
    case .connUncategorized: return 99001
    case .modelUncategorized: return 99002
    case .inputUncategorized: return 99003
    case .annotationUncategorized: return 99004
    case .billingUncategorized: return 99005
    case .internalUncategorized: return 99009
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Clarifai_Api_Status_StatusCode: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Clarifai_Api_Status_StatusCode] = [
    .zero,
    .success,
    .mixedStatus,
    .failure,
    .tryAgain,
    .notImplemented,
    .connAccountIssues,
    .connTokenInvalid,
    .connCredentialsInvalid,
    .connExceedHourlyLimit,
    .connExceedMonthlyLimit,
    .connThrottled,
    .connExceedsLimits,
    .connInsufficientScopes,
    .connKeyInvalid,
    .connKeyNotFound,
    .connBadRequestFormat,
    .connDoesNotExist,
    .connInvalidRequest,
    .connMethodNotAllowed,
    .connNoGdprConsent,
    .connAuthMethodDisabled,
    .modelTrained,
    .modelTraining,
    .modelUntrained,
    .modelQueuedForTraining,
    .modelUploading,
    .modelUploadingFailed,
    .modelTrainingNoData,
    .modelTrainingNoPositives,
    .modelTrainingOneVsNSingleClass,
    .modelTrainingTimedOut,
    .modelTrainingWaitingError,
    .modelTrainingUnknownError,
    .modelTrainingMsgRedeliver,
    .modelTrainingInsufficientData,
    .modelTrainingInvalidParams,
    .modelTrainingInvalidDataToleranceExceeded,
    .modelModifySuccess,
    .modelModifyPending,
    .modelModifyFailed,
    .modelDoesNotExist,
    .modelPermissionDenied,
    .modelInvalidArgument,
    .modelInvalidRequest,
    .modelEvaluated,
    .modelEvaluating,
    .modelNotEvaluated,
    .modelQueuedForEvaluation,
    .modelEvaluationTimedOut,
    .modelEvaluationWaitingError,
    .modelEvaluationUnknownError,
    .modelPredictionFailed,
    .modelEvaluationMsgRedeliver,
    .modelEvaluationNeedLabels,
    .modelEvaluationNeedInputs,
    .modelDeploymentFailed,
    .modelDeploying,
    .modelQueuedForDeployment,
    .modelNotDeployed,
    .workflowNoMatchingInput,
    .workflowRequireTrainedModel,
    .workflowDuplicate,
    .workflowUnsupportedFormat,
    .workflowDoesNotExist,
    .workflowPermissionDenied,
    .workflowInvalidArgument,
    .workflowInvalidRecipe,
    .workflowInvalidTemplate,
    .workflowInvalidGraph,
    .workflowInternalFailure,
    .workflowInvalidRequest,
    .workflowModifySuccess,
    .workflowModifyPending,
    .workflowModifyFailed,
    .workflowReindexFailed,
    .conceptModifySuccess,
    .conceptModifyPending,
    .conceptModifyFailed,
    .annotationSuccess,
    .annotationPending,
    .annotationFailed,
    .annotationUnknownStatus,
    .annotationInvalidArgument,
    .annotationPermissionDenied,
    .annotationAwaitingReview,
    .annotationReviewDenied,
    .annotationModifySuccess,
    .annotationModifyPending,
    .annotationModifyFailed,
    .metadataInvalidPatchArguments,
    .metadataParsingIssue,
    .metadataManipulationIssue,
    .trainerJobStateNone,
    .trainerJobStateQueued,
    .trainerJobStateRunning,
    .trainerJobStateComplete,
    .trainerJobStateError,
    .dataDumpSuccess,
    .dataDumpPending,
    .dataDumpFailed,
    .dataDumpInProgress,
    .appDuplicationSuccess,
    .appDuplicationFailed,
    .appDuplicationPending,
    .appDuplicationInProgress,
    .appDuplicationInvalidRequest,
    .inputDownloadSuccess,
    .inputDownloadPending,
    .inputDownloadFailed,
    .inputDownloadInProgress,
    .inputStatusUpdateFailed,
    .inputDeleteFailed,
    .inputDuplicate,
    .inputUnsupportedFormat,
    .inputDoesNotExist,
    .inputPermissionDenied,
    .inputInvalidArgument,
    .inputOverLimit,
    .inputInvalidURL,
    .inputModifySuccess,
    .inputModifyPending,
    .inputModifyFailed,
    .inputStorageHostFailed,
    .allInputInvalidBytes,
    .inputClusterSuccess,
    .inputClusterPending,
    .inputClusterFailed,
    .inputClusterInProgress,
    .inputReindexSuccess,
    .inputReindexPending,
    .inputReindexFailed,
    .inputReindexInProgress,
    .inputVideoDownloadSuccess,
    .inputVideoDownloadPending,
    .inputVideoDownloadFailed,
    .inputVideoDuplicate,
    .inputVideoUnsupportedFormat,
    .inputVideoDoesNotExist,
    .inputVideoPermissionDenied,
    .inputVideoInvalidArgument,
    .inputVideoOverLimit,
    .inputVideoInvalidURL,
    .inputVideoModifySuccess,
    .inputVideoModifyPending,
    .inputVideoModifyFailed,
    .inputVideoStorageHostFailed,
    .allInputVideosInvalidBytes,
    .inputConnectionFailed,
    .requestDisabledForMaintenance,
    .inputWritesDisabledForMaintenance,
    .inputInvalidRequest,
    .predictInvalidRequest,
    .searchInvalidRequest,
    .conceptsInvalidRequest,
    .statsInvalidRequest,
    .databaseDuplicateKey,
    .databaseStatementTimeout,
    .databaseInvalidRowsAffected,
    .databaseDeadlockDetected,
    .databaseFailTask,
    .databaseFailToGetConnections,
    .databaseTooManyClients,
    .databaseConstraintViolated,
    .databaseNoOngoingOperations,
    .databaseLockedByOngoingOperation,
    .asyncWorkerMultiErrors,
    .rpcRequestQueueFull,
    .rpcServerUnavailable,
    .rpcRequestTimeout,
    .rpcMaxMessageSizeExceeded,
    .rpcCanceled,
    .clusterInternalFailure,
    .externalConnectionError,
    .queueConnError,
    .queueCloseRequestTimeout,
    .queueConnClosed,
    .queuePublishAckTimeout,
    .queuePublishError,
    .queueSubscriptionTimeout,
    .queueSubscriptionError,
    .queueMarshallingFailed,
    .queueUnmarshallingFailed,
    .queueMaxMsgRedeliveryExceeded,
    .queueAckFailure,
    .sqsOverlimit,
    .sqsInvalidReceiptHandle,
    .sqsUnknown,
    .kafkaUnknow,
    .kafkaMissingTopic,
    .kafkaAdminErr,
    .kafkaConsumerErr,
    .kafkaPublisherErr,
    .searchInternalFailure,
    .searchProjectionFailure,
    .searchPredictionFailure,
    .searchByNotFullyIndexedInput,
    .savedSearchModifyFailed,
    .annotationSearchMetricsQueuedForEvaluation,
    .annotationSearchMetricsEvaluating,
    .annotationSearchMetricsEvaluated,
    .annotationSearchMetricsFailedToRetrieveData,
    .annotationSearchMetricsInvalidArgument,
    .annotationSearchMetricsFailed,
    .stripeEventError,
    .cacheMiss,
    .redisScriptExitedWithFailure,
    .signupEventError,
    .signupFlagged,
    .filetypeUnsupported,
    .appCountInvalidMessage,
    .appCountUpdateIncrementFailed,
    .appCountRebuildFailed,
    .appCountInternalFailure,
    .mpDownloadError,
    .mpResolveDnsError,
    .mpDownloadMaxSizeExceededError,
    .mpImageDecodeError,
    .mpInvalidArgument,
    .mpImageProcessingError,
    .userConsentFace,
    .workerMissing,
    .workerActive,
    .workerInactive,
    .collectorMissing,
    .collectorActive,
    .collectorInactive,
    .ssoIdentityProviderDoesNotExist,
    .taskInProgress,
    .taskDone,
    .taskWontDo,
    .taskAddAnnotationsFailure,
    .taskConflict,
    .taskNotImplemented,
    .labelOrderPending,
    .labelOrderInProgress,
    .labelOrderSuccess,
    .labelOrderCanceled,
    .licenseActive,
    .licenseDoesNotExist,
    .licenseNeedUpdate,
    .licenseExpired,
    .licenseRevoked,
    .licenseDeleted,
    .licenseVolumeExceeded,
    .passwordValidationSuccess,
    .passwordValidationFailed,
    .passwordpolicyInvalidArgument,
    .featureflagConfigNotFound,
    .featureflagInvalidArgument,
    .featureflagBlocked,
    .internalServerIssue,
    .internalFetchingIssue,
    .internalDatabaseIssue,
    .internalUnexpectedTimeout,
    .internalUnexpectedV1,
    .internalUnexpectedPanic,
    .internalUnexpectedSpire,
    .internalRedisUnavailable,
    .internalResourceExhausted,
    .internalRedisUncategorized,
    .internalAwsUncategorized,
    .internalAzureUncategorized,
    .connUncategorized,
    .modelUncategorized,
    .inputUncategorized,
    .annotationUncategorized,
    .billingUncategorized,
    .internalUncategorized,
    .badRequest,
    .serverError,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Clarifai_Api_Status_StatusCode: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ZERO"),
    10000: .same(proto: "SUCCESS"),
    10010: .same(proto: "MIXED_STATUS"),
    10020: .same(proto: "FAILURE"),
    10030: .same(proto: "TRY_AGAIN"),
    10040: .same(proto: "NOT_IMPLEMENTED"),
    11000: .same(proto: "CONN_ACCOUNT_ISSUES"),
    11001: .same(proto: "CONN_TOKEN_INVALID"),
    11002: .same(proto: "CONN_CREDENTIALS_INVALID"),
    11003: .same(proto: "CONN_EXCEED_HOURLY_LIMIT"),
    11004: .same(proto: "CONN_EXCEED_MONTHLY_LIMIT"),
    11005: .same(proto: "CONN_THROTTLED"),
    11006: .same(proto: "CONN_EXCEEDS_LIMITS"),
    11007: .same(proto: "CONN_INSUFFICIENT_SCOPES"),
    11008: .same(proto: "CONN_KEY_INVALID"),
    11009: .same(proto: "CONN_KEY_NOT_FOUND"),
    11100: .same(proto: "CONN_BAD_REQUEST_FORMAT"),
    11101: .same(proto: "CONN_DOES_NOT_EXIST"),
    11102: .same(proto: "CONN_INVALID_REQUEST"),
    11103: .same(proto: "CONN_METHOD_NOT_ALLOWED"),
    11104: .same(proto: "CONN_NO_GDPR_CONSENT"),
    11200: .same(proto: "CONN_AUTH_METHOD_DISABLED"),
    21100: .same(proto: "MODEL_TRAINED"),
    21101: .same(proto: "MODEL_TRAINING"),
    21102: .same(proto: "MODEL_UNTRAINED"),
    21103: .same(proto: "MODEL_QUEUED_FOR_TRAINING"),
    21104: .same(proto: "MODEL_UPLOADING"),
    21105: .same(proto: "MODEL_UPLOADING_FAILED"),
    21110: .same(proto: "MODEL_TRAINING_NO_DATA"),
    21111: .same(proto: "MODEL_TRAINING_NO_POSITIVES"),
    21112: .same(proto: "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS"),
    21113: .same(proto: "MODEL_TRAINING_TIMED_OUT"),
    21114: .same(proto: "MODEL_TRAINING_WAITING_ERROR"),
    21115: .same(proto: "MODEL_TRAINING_UNKNOWN_ERROR"),
    21116: .same(proto: "MODEL_TRAINING_MSG_REDELIVER"),
    21117: .same(proto: "MODEL_TRAINING_INSUFFICIENT_DATA"),
    21118: .same(proto: "MODEL_TRAINING_INVALID_PARAMS"),
    21119: .same(proto: "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED"),
    21150: .same(proto: "MODEL_MODIFY_SUCCESS"),
    21151: .same(proto: "MODEL_MODIFY_PENDING"),
    21152: .same(proto: "MODEL_MODIFY_FAILED"),
    21200: .same(proto: "MODEL_DOES_NOT_EXIST"),
    21201: .same(proto: "MODEL_PERMISSION_DENIED"),
    21202: .same(proto: "MODEL_INVALID_ARGUMENT"),
    21203: .same(proto: "MODEL_INVALID_REQUEST"),
    21300: .same(proto: "MODEL_EVALUATED"),
    21301: .same(proto: "MODEL_EVALUATING"),
    21302: .same(proto: "MODEL_NOT_EVALUATED"),
    21303: .same(proto: "MODEL_QUEUED_FOR_EVALUATION"),
    21310: .same(proto: "MODEL_EVALUATION_TIMED_OUT"),
    21311: .same(proto: "MODEL_EVALUATION_WAITING_ERROR"),
    21312: .same(proto: "MODEL_EVALUATION_UNKNOWN_ERROR"),
    21313: .same(proto: "MODEL_PREDICTION_FAILED"),
    21314: .same(proto: "MODEL_EVALUATION_MSG_REDELIVER"),
    21315: .same(proto: "MODEL_EVALUATION_NEED_LABELS"),
    21316: .same(proto: "MODEL_EVALUATION_NEED_INPUTS"),
    21350: .same(proto: "MODEL_DEPLOYMENT_FAILED"),
    21351: .same(proto: "MODEL_DEPLOYING"),
    21352: .same(proto: "MODEL_QUEUED_FOR_DEPLOYMENT"),
    21353: .same(proto: "MODEL_NOT_DEPLOYED"),
    22001: .same(proto: "WORKFLOW_NO_MATCHING_INPUT"),
    22002: .same(proto: "WORKFLOW_REQUIRE_TRAINED_MODEL"),
    22100: .same(proto: "WORKFLOW_DUPLICATE"),
    22101: .same(proto: "WORKFLOW_UNSUPPORTED_FORMAT"),
    22102: .same(proto: "WORKFLOW_DOES_NOT_EXIST"),
    22103: .same(proto: "WORKFLOW_PERMISSION_DENIED"),
    22104: .same(proto: "WORKFLOW_INVALID_ARGUMENT"),
    22105: .same(proto: "WORKFLOW_INVALID_RECIPE"),
    22106: .same(proto: "WORKFLOW_INVALID_TEMPLATE"),
    22107: .same(proto: "WORKFLOW_INVALID_GRAPH"),
    22108: .same(proto: "WORKFLOW_INTERNAL_FAILURE"),
    22150: .same(proto: "WORKFLOW_MODIFY_SUCCESS"),
    22151: .same(proto: "WORKFLOW_MODIFY_PENDING"),
    22152: .same(proto: "WORKFLOW_MODIFY_FAILED"),
    22153: .same(proto: "WORKFLOW_REINDEX_FAILED"),
    22999: .same(proto: "WORKFLOW_INVALID_REQUEST"),
    23150: .same(proto: "CONCEPT_MODIFY_SUCCESS"),
    23151: .same(proto: "CONCEPT_MODIFY_PENDING"),
    23152: .same(proto: "CONCEPT_MODIFY_FAILED"),
    24150: .same(proto: "ANNOTATION_SUCCESS"),
    24151: .same(proto: "ANNOTATION_PENDING"),
    24152: .same(proto: "ANNOTATION_FAILED"),
    24154: .same(proto: "ANNOTATION_UNKNOWN_STATUS"),
    24155: .same(proto: "ANNOTATION_INVALID_ARGUMENT"),
    24156: .same(proto: "ANNOTATION_PERMISSION_DENIED"),
    24157: .same(proto: "ANNOTATION_AWAITING_REVIEW"),
    24158: .same(proto: "ANNOTATION_REVIEW_DENIED"),
    24250: .same(proto: "ANNOTATION_MODIFY_SUCCESS"),
    24251: .same(proto: "ANNOTATION_MODIFY_PENDING"),
    24252: .same(proto: "ANNOTATION_MODIFY_FAILED"),
    24900: .same(proto: "METADATA_INVALID_PATCH_ARGUMENTS"),
    24901: .same(proto: "METADATA_PARSING_ISSUE"),
    24902: .same(proto: "METADATA_MANIPULATION_ISSUE"),
    25000: .same(proto: "TRAINER_JOB_STATE_NONE"),
    25001: .same(proto: "TRAINER_JOB_STATE_QUEUED"),
    25002: .same(proto: "TRAINER_JOB_STATE_RUNNING"),
    25003: .same(proto: "TRAINER_JOB_STATE_COMPLETE"),
    25004: .same(proto: "TRAINER_JOB_STATE_ERROR"),
    25150: .same(proto: "DATA_DUMP_SUCCESS"),
    25151: .same(proto: "DATA_DUMP_PENDING"),
    25152: .same(proto: "DATA_DUMP_FAILED"),
    25153: .same(proto: "DATA_DUMP_IN_PROGRESS"),
    25200: .same(proto: "APP_DUPLICATION_SUCCESS"),
    25201: .same(proto: "APP_DUPLICATION_FAILED"),
    25202: .same(proto: "APP_DUPLICATION_PENDING"),
    25203: .same(proto: "APP_DUPLICATION_IN_PROGRESS"),
    25204: .same(proto: "APP_DUPLICATION_INVALID_REQUEST"),
    30000: .same(proto: "INPUT_DOWNLOAD_SUCCESS"),
    30001: .same(proto: "INPUT_DOWNLOAD_PENDING"),
    30002: .same(proto: "INPUT_DOWNLOAD_FAILED"),
    30003: .same(proto: "INPUT_DOWNLOAD_IN_PROGRESS"),
    30004: .same(proto: "INPUT_STATUS_UPDATE_FAILED"),
    30005: .same(proto: "INPUT_DELETE_FAILED"),
    30100: .same(proto: "INPUT_DUPLICATE"),
    30101: .same(proto: "INPUT_UNSUPPORTED_FORMAT"),
    30102: .same(proto: "INPUT_DOES_NOT_EXIST"),
    30103: .same(proto: "INPUT_PERMISSION_DENIED"),
    30104: .same(proto: "INPUT_INVALID_ARGUMENT"),
    30105: .same(proto: "INPUT_OVER_LIMIT"),
    30106: .same(proto: "INPUT_INVALID_URL"),
    30200: .same(proto: "INPUT_MODIFY_SUCCESS"),
    30201: .same(proto: "INPUT_MODIFY_PENDING"),
    30203: .same(proto: "INPUT_MODIFY_FAILED"),
    30210: .same(proto: "INPUT_STORAGE_HOST_FAILED"),
    30300: .same(proto: "ALL_INPUT_INVALID_BYTES"),
    30400: .same(proto: "INPUT_CLUSTER_SUCCESS"),
    30401: .same(proto: "INPUT_CLUSTER_PENDING"),
    30402: .same(proto: "INPUT_CLUSTER_FAILED"),
    30403: .same(proto: "INPUT_CLUSTER_IN_PROGRESS"),
    30500: .same(proto: "INPUT_REINDEX_SUCCESS"),
    30501: .same(proto: "INPUT_REINDEX_PENDING"),
    30502: .same(proto: "INPUT_REINDEX_FAILED"),
    30503: .same(proto: "INPUT_REINDEX_IN_PROGRESS"),
    31000: .same(proto: "INPUT_VIDEO_DOWNLOAD_SUCCESS"),
    31001: .same(proto: "INPUT_VIDEO_DOWNLOAD_PENDING"),
    31002: .same(proto: "INPUT_VIDEO_DOWNLOAD_FAILED"),
    31100: .same(proto: "INPUT_VIDEO_DUPLICATE"),
    31101: .same(proto: "INPUT_VIDEO_UNSUPPORTED_FORMAT"),
    31102: .same(proto: "INPUT_VIDEO_DOES_NOT_EXIST"),
    31103: .same(proto: "INPUT_VIDEO_PERMISSION_DENIED"),
    31104: .same(proto: "INPUT_VIDEO_INVALID_ARGUMENT"),
    31105: .same(proto: "INPUT_VIDEO_OVER_LIMIT"),
    31106: .same(proto: "INPUT_VIDEO_INVALID_URL"),
    31200: .same(proto: "INPUT_VIDEO_MODIFY_SUCCESS"),
    31201: .same(proto: "INPUT_VIDEO_MODIFY_PENDING"),
    31203: .same(proto: "INPUT_VIDEO_MODIFY_FAILED"),
    31210: .same(proto: "INPUT_VIDEO_STORAGE_HOST_FAILED"),
    31300: .same(proto: "ALL_INPUT_VIDEOS_INVALID_BYTES"),
    39996: .same(proto: "INPUT_CONNECTION_FAILED"),
    39997: .same(proto: "REQUEST_DISABLED_FOR_MAINTENANCE"),
    39998: .same(proto: "INPUT_WRITES_DISABLED_FOR_MAINTENANCE"),
    39999: .same(proto: "INPUT_INVALID_REQUEST"),
    40001: .same(proto: "PREDICT_INVALID_REQUEST"),
    40002: .same(proto: "SEARCH_INVALID_REQUEST"),
    40003: .same(proto: "CONCEPTS_INVALID_REQUEST"),
    40004: .same(proto: "STATS_INVALID_REQUEST"),
    40010: .same(proto: "DATABASE_DUPLICATE_KEY"),
    40011: .same(proto: "DATABASE_STATEMENT_TIMEOUT"),
    40012: .same(proto: "DATABASE_INVALID_ROWS_AFFECTED"),
    40013: .same(proto: "DATABASE_DEADLOCK_DETECTED"),
    40014: .same(proto: "DATABASE_FAIL_TASK"),
    40015: .same(proto: "DATABASE_FAIL_TO_GET_CONNECTIONS"),
    40016: .same(proto: "DATABASE_TOO_MANY_CLIENTS"),
    40017: .same(proto: "DATABASE_CONSTRAINT_VIOLATED"),
    40018: .same(proto: "DATABASE_NO_ONGOING_OPERATIONS"),
    40019: .same(proto: "DATABASE_LOCKED_BY_ONGOING_OPERATION"),
    40020: .same(proto: "ASYNC_WORKER_MULTI_ERRORS"),
    40030: .same(proto: "RPC_REQUEST_QUEUE_FULL"),
    40031: .same(proto: "RPC_SERVER_UNAVAILABLE"),
    40032: .same(proto: "RPC_REQUEST_TIMEOUT"),
    40033: .same(proto: "RPC_MAX_MESSAGE_SIZE_EXCEEDED"),
    40034: .same(proto: "EXTERNAL_CONNECTION_ERROR"),
    40035: .same(proto: "RPC_CANCELED"),
    41000: .same(proto: "QUEUE_CONN_ERROR"),
    41002: .same(proto: "QUEUE_CLOSE_REQUEST_TIMEOUT"),
    41003: .same(proto: "QUEUE_CONN_CLOSED"),
    41004: .same(proto: "QUEUE_PUBLISH_ACK_TIMEOUT"),
    41005: .same(proto: "QUEUE_PUBLISH_ERROR"),
    41006: .same(proto: "QUEUE_SUBSCRIPTION_TIMEOUT"),
    41007: .same(proto: "QUEUE_SUBSCRIPTION_ERROR"),
    41008: .same(proto: "QUEUE_MARSHALLING_FAILED"),
    41009: .same(proto: "QUEUE_UNMARSHALLING_FAILED"),
    41010: .same(proto: "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED"),
    41011: .same(proto: "QUEUE_ACK_FAILURE"),
    41100: .same(proto: "SQS_OVERLIMIT"),
    41101: .same(proto: "SQS_INVALID_RECEIPT_HANDLE"),
    41102: .same(proto: "SQS_UNKNOWN"),
    41200: .same(proto: "KAFKA_UNKNOW"),
    41201: .same(proto: "KAFKA_MISSING_TOPIC"),
    41202: .same(proto: "KAFKA_ADMIN_ERR"),
    41203: .same(proto: "KAFKA_CONSUMER_ERR"),
    41204: .same(proto: "KAFKA_PUBLISHER_ERR"),
    43001: .same(proto: "SEARCH_INTERNAL_FAILURE"),
    43002: .same(proto: "SEARCH_PROJECTION_FAILURE"),
    43003: .same(proto: "SEARCH_PREDICTION_FAILURE"),
    43004: .same(proto: "SEARCH_BY_NOT_FULLY_INDEXED_INPUT"),
    43005: .same(proto: "SAVED_SEARCH_MODIFY_FAILED"),
    43040: .same(proto: "CLUSTER_INTERNAL_FAILURE"),
    43100: .same(proto: "ANNOTATION_SEARCH_METRICS_QUEUED_FOR_EVALUATION"),
    43101: .same(proto: "ANNOTATION_SEARCH_METRICS_EVALUATING"),
    43102: .same(proto: "ANNOTATION_SEARCH_METRICS_EVALUATED"),
    43103: .same(proto: "ANNOTATION_SEARCH_METRICS_FAILED_TO_RETRIEVE_DATA"),
    43104: .same(proto: "ANNOTATION_SEARCH_METRICS_INVALID_ARGUMENT"),
    43105: .same(proto: "ANNOTATION_SEARCH_METRICS_FAILED"),
    44001: .same(proto: "STRIPE_EVENT_ERROR"),
    45001: .same(proto: "CACHE_MISS"),
    45002: .same(proto: "REDIS_SCRIPT_EXITED_WITH_FAILURE"),
    46001: .same(proto: "SIGNUP_EVENT_ERROR"),
    46002: .same(proto: "SIGNUP_FLAGGED"),
    46003: .same(proto: "FILETYPE_UNSUPPORTED"),
    47001: .same(proto: "APP_COUNT_INVALID_MESSAGE"),
    47002: .same(proto: "APP_COUNT_UPDATE_INCREMENT_FAILED"),
    47003: .same(proto: "APP_COUNT_REBUILD_FAILED"),
    47004: .same(proto: "APP_COUNT_INTERNAL_FAILURE"),
    47101: .same(proto: "MP_DOWNLOAD_ERROR"),
    47102: .same(proto: "MP_RESOLVE_DNS_ERROR"),
    47103: .same(proto: "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR"),
    47104: .same(proto: "MP_IMAGE_DECODE_ERROR"),
    47105: .same(proto: "MP_INVALID_ARGUMENT"),
    47106: .same(proto: "MP_IMAGE_PROCESSING_ERROR"),
    50001: .same(proto: "USER_CONSENT_FACE"),
    51000: .same(proto: "WORKER_MISSING"),
    51001: .same(proto: "WORKER_ACTIVE"),
    51002: .same(proto: "WORKER_INACTIVE"),
    52000: .same(proto: "COLLECTOR_MISSING"),
    52001: .same(proto: "COLLECTOR_ACTIVE"),
    52002: .same(proto: "COLLECTOR_INACTIVE"),
    53001: .same(proto: "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST"),
    54001: .same(proto: "TASK_IN_PROGRESS"),
    54002: .same(proto: "TASK_DONE"),
    54003: .same(proto: "TASK_WONT_DO"),
    54005: .same(proto: "TASK_ADD_ANNOTATIONS_FAILURE"),
    54100: .same(proto: "TASK_CONFLICT"),
    54101: .same(proto: "TASK_NOT_IMPLEMENTED"),
    55001: .same(proto: "LABEL_ORDER_PENDING"),
    55002: .same(proto: "LABEL_ORDER_IN_PROGRESS"),
    55003: .same(proto: "LABEL_ORDER_SUCCESS"),
    55004: .same(proto: "LABEL_ORDER_CANCELED"),
    60000: .same(proto: "LICENSE_ACTIVE"),
    60001: .same(proto: "LICENSE_DOES_NOT_EXIST"),
    60002: .same(proto: "LICENSE_NEED_UPDATE"),
    60003: .same(proto: "LICENSE_EXPIRED"),
    60004: .same(proto: "LICENSE_REVOKED"),
    60005: .same(proto: "LICENSE_DELETED"),
    60006: .same(proto: "LICENSE_VOLUME_EXCEEDED"),
    61000: .same(proto: "PASSWORD_VALIDATION_SUCCESS"),
    61001: .same(proto: "PASSWORD_VALIDATION_FAILED"),
    61002: .same(proto: "PASSWORDPOLICY_INVALID_ARGUMENT"),
    62000: .same(proto: "FEATUREFLAG_CONFIG_NOT_FOUND"),
    62001: .same(proto: "FEATUREFLAG_INVALID_ARGUMENT"),
    62002: .same(proto: "FEATUREFLAG_BLOCKED"),
    90400: .same(proto: "BAD_REQUEST"),
    90500: .same(proto: "SERVER_ERROR"),
    98004: .same(proto: "INTERNAL_SERVER_ISSUE"),
    98005: .same(proto: "INTERNAL_FETCHING_ISSUE"),
    98006: .same(proto: "INTERNAL_DATABASE_ISSUE"),
    98009: .same(proto: "INTERNAL_UNEXPECTED_TIMEOUT"),
    98010: .same(proto: "INTERNAL_UNEXPECTED_V1"),
    98011: .same(proto: "INTERNAL_UNEXPECTED_PANIC"),
    98012: .same(proto: "INTERNAL_UNEXPECTED_SPIRE"),
    98013: .same(proto: "INTERNAL_REDIS_UNAVAILABLE"),
    98014: .same(proto: "INTERNAL_RESOURCE_EXHAUSTED"),
    98015: .same(proto: "INTERNAL_REDIS_UNCATEGORIZED"),
    98016: .same(proto: "INTERNAL_AWS_UNCATEGORIZED"),
    98017: .same(proto: "INTERNAL_AZURE_UNCATEGORIZED"),
    99001: .same(proto: "CONN_UNCATEGORIZED"),
    99002: .same(proto: "MODEL_UNCATEGORIZED"),
    99003: .same(proto: "INPUT_UNCATEGORIZED"),
    99004: .same(proto: "ANNOTATION_UNCATEGORIZED"),
    99005: .same(proto: "BILLING_UNCATEGORIZED"),
    99009: .same(proto: "INTERNAL_UNCATEGORIZED"),
  ]
}
