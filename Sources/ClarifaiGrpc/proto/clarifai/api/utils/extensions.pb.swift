// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: proto/clarifai/api/utils/extensions.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Extension support defined in extensions.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftProtobuf.Google_Protobuf_FieldOptions {

  /// If True then we will return this field with it's zero value even if not set.
  /// This means in json responses empty lists will appear instead of not being returned (which is
  /// the default convention for proto3). For int's we will show 0, for floats 0.0, etc.
  public var Clarifai_Api_Utils_clShowIfEmpty: Bool {
    get {return getExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_show_if_empty) ?? false}
    set {setExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_show_if_empty, value: newValue)}
  }
  /// Returns true if extension `Clarifai_Api_Utils_Extensions_cl_show_if_empty`
  /// has been explicitly set.
  public var hasClarifai_Api_Utils_clShowIfEmpty: Bool {
    return hasExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_show_if_empty)
  }
  /// Clears the value of extension `Clarifai_Api_Utils_Extensions_cl_show_if_empty`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearClarifai_Api_Utils_clShowIfEmpty() {
    clearExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_show_if_empty)
  }

  public var Clarifai_Api_Utils_clMoretags: String {
    get {return getExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_moretags) ?? String()}
    set {setExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_moretags, value: newValue)}
  }
  /// Returns true if extension `Clarifai_Api_Utils_Extensions_cl_moretags`
  /// has been explicitly set.
  public var hasClarifai_Api_Utils_clMoretags: Bool {
    return hasExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_moretags)
  }
  /// Clears the value of extension `Clarifai_Api_Utils_Extensions_cl_moretags`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearClarifai_Api_Utils_clMoretags() {
    clearExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_moretags)
  }

  /// For float fields where this is set, this value will be used by the server when parsing the
  /// request and the field is not present in the request. If the field is present in the request,
  /// then the value of the field will be used instead. This is ONLY used for json requests as binary
  /// proto requests are expected to always set the field.
  public var Clarifai_Api_Utils_clDefaultFloat: Float {
    get {return getExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_default_float) ?? 0}
    set {setExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_default_float, value: newValue)}
  }
  /// Returns true if extension `Clarifai_Api_Utils_Extensions_cl_default_float`
  /// has been explicitly set.
  public var hasClarifai_Api_Utils_clDefaultFloat: Bool {
    return hasExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_default_float)
  }
  /// Clears the value of extension `Clarifai_Api_Utils_Extensions_cl_default_float`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearClarifai_Api_Utils_clDefaultFloat() {
    clearExtensionValue(ext: Clarifai_Api_Utils_Extensions_cl_default_float)
  }

}

// MARK: - File's ExtensionMap: Clarifai_Api_Utils_Extensions_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
public let Clarifai_Api_Utils_Extensions_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Clarifai_Api_Utils_Extensions_cl_show_if_empty,
  Clarifai_Api_Utils_Extensions_cl_moretags,
  Clarifai_Api_Utils_Extensions_cl_default_float
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

/// If True then we will return this field with it's zero value even if not set.
/// This means in json responses empty lists will appear instead of not being returned (which is
/// the default convention for proto3). For int's we will show 0, for floats 0.0, etc.
public let Clarifai_Api_Utils_Extensions_cl_show_if_empty = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufBool>, SwiftProtobuf.Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 50000,
  fieldName: "clarifai.api.utils.cl_show_if_empty"
)

public let Clarifai_Api_Utils_Extensions_cl_moretags = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufString>, SwiftProtobuf.Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 50001,
  fieldName: "clarifai.api.utils.cl_moretags"
)

/// For float fields where this is set, this value will be used by the server when parsing the
/// request and the field is not present in the request. If the field is present in the request,
/// then the value of the field will be used instead. This is ONLY used for json requests as binary
/// proto requests are expected to always set the field.
public let Clarifai_Api_Utils_Extensions_cl_default_float = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufFloat>, SwiftProtobuf.Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 50010,
  fieldName: "clarifai.api.utils.cl_default_float"
)
